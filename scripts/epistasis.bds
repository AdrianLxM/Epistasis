#!/usr/bin/env bds

#-------------------------------------------------------------------------------
# Epistasis project
#
#															Pablo Cingolani 2014
#-------------------------------------------------------------------------------

debug			:= false
dir				:= "$HOME/snpEff"

# Parameters
aaContactDist	:= 3.0	# Distance between AA to be considered 'in contact'
aaMinSepration	:= 25	# Number of AA separation to consider them for distance analysis
genome			:= "hg19"
genomeEnsembl	:= "GRCh37.75"

# Data files
aaContact		:= "$dir/db/pdb/aa.contact.txt"
aaContactSeq	:= "$dir/db/pdb/aa.contact.sequence.txt"
idMap			:= "$dir/db/multiz100way/idMap_ensemblId_refseq_pdbId.txt"
idMapConfirmed	:= "$dir/db/multiz100way/idMap_ensemblId_refseq_pdbId.confirmed.txt"
msa				:= "$dir/db/multiz100way/refGene.exonAA.fa"
pdbDir			:= "$dir/db/pdb/pdb_hires_human"
qhat			:= "$dir/db/multiz100way/Qhat.txt"
tree			:= "$dir/db/multiz100way/hg19.100way.nh"
snpeffConfig	:= "$dir/snpEff.config"
bgNum			:= 10 * 1000 * 1000	# Number of iterations for background calculation

# Commands
#cmdEpistasis	:= "java -Xmx4G -jar Epistasis.jar"
cmdEpistasis	:= "java -Xmx20G -jar Epistasis.jar"

# Change parameters if we are debugging (smaller datasets)
if( debug ) {
	print("DEBUG MODE: Setting 'debug' paths\n")
	genome = "testHg19Chr1"
	msa  = "$dir/db/multiz100way/head.fa"
	qhat = "$dir/db/multiz100way/Qhat_head.txt"
	bgNum = 1000
}

#-------------------------------------------------------------------------------
# Main
#-------------------------------------------------------------------------------

# # Estimate matrix Q from sequence alignment and tree
print("\nEstimate Q: '$qhat'\n")
task( qhat <- [tree, msa] )	sys $cmdEpistasis Qhat $tree $msa $qhat
wait

# Map Pdb <-> Genome
print("\nMap Pdb entries to transcripts: '$idMapConfirmed'\n")
task( idMapConfirmed <- [pdbDir, tree, msa, idMap] )	sys $cmdEpistasis mapPdbGenome $snpeffConfig $genome $pdbDir $idMap | tee $idMapConfirmed
wait

# Calculate amino acids "in contact" within the same protein
print("\nCalculate AA in contact within proteins: '$aaContact'\n")
tmp := "$aaContact.tmp"
task( aaContact <- [pdbDir, idMapConfirmed] ) {
	sys $cmdEpistasis pdbdist $aaContactDist $aaMinSepration $pdbDir $idMapConfirmed > $tmp
	sys cat $tmp | grep "^Contact:" | cut -f 2- | sort | uniq > $aaContact
}
wait

# Add MSA sequences
print("\nAdd MSA information to AA in contact: '$aaContactSeq'\n")
task( aaContactSeq <- aaContact )	sys $cmdEpistasis addMsaSeqs $snpeffConfig $genome $tree $msa $idMapConfirmed $aaContact > $aaContactSeq
wait

# Annotations of amino acids "in contact" (e.g. NextProt annotations)
aaNextProt := "$dir/db/pdb/aa.contact.nextProt.txt"
print("\nAnnotating with NextProt: '$aaNextProt'\n")
task( aaNextProt <- aaContactSeq )	sys $cmdEpistasis nextprot $snpeffConfig $genomeEnsembl $idMapConfirmed $aaContactSeq > $aaNextProt
wait

# Calculate values (MI, varInf, etc.)
# Calculate background distribution
for( string type : ['mi', 'varInf'] ) {
	aaStats := "$dir/db/pdb/aa.contact.$type.txt"
	aaStatsSummary := "$dir/db/pdb/aa.contact.$type.summary.txt"
	print("\nCalculating MI and conservation:\n\t'$aaStats'\n\t'$aaStatsSummary'\n")
	task( aaStats <- aaNextProt )	sys $cmdEpistasis aaContactStats $type $aaNextProt > $aaStats 2> $aaStatsSummary
	wait

	bg := "$dir/db/pdb/bg_$type.txt"
	bgDetails := "$dir/db/pdb/bg_$type.details.txt"
	print("\nCalculating background distribution ($bgNum iterations): '$bg'\n")
	task( bg <- [tree, msa] ) sys $cmdEpistasis background $type 1 $bgNum $tree $msa 2>$bg >$bgDetails
	wait
}

# Done
wait
print("\nDone!\n")
